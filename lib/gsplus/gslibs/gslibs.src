// @startuml
// !define FILE <&file>
// !define FOLDER <&folder>
// !define WARN <&warning>
// !define PLUS <&plus>
// !define MINUS <&minus>
// !define CLOUD <&cloud>
// !define MOBILE <&phone>
// !define INFO <&info>
// !define STAR <&star>
// !define DOCUMENT <&document>
// !define CALENDAR <&calendar>
// !define MAP <&map>
// !define LIST <&list>
// entity load_lib {
//   -string [libName = "metaxploit.so"]
//   -string [libDir = "/lib"]
//   -string [libType = ""]
// }
// load_lib : include_lib(libName, libDir, libType)
// load_lib : typeof(lib): string | null
// @enduml

// * **Description:**
// Loads a library from the lib directory, a specified directory, optionally verify type

// * **Description:**
// Loads a library from the lib directory, a specified directory, optionally verify type
// 
// @param {string} [libName] - The name of the library to load.
// @param {string} [libDir] - The directory where the library is located.
// @param {string} [libType] - The expected type of the library.
// @param {string} [libName] - The name of the library to load.
// @param {string} [libDir] - The directory where the library is located.
// @param {string} [libType] - The expected type of the library.
// 
//  * @return {objectLib | null}
// @example lib = load_lib                                              //Load metaxploit.so from /lib directory
// @example lib = load_lib("metaxploit.so")                             //Load a library without specifying type
// @example lib = load_lib("customLib.so", "/altLib")                   //Load a library from specified directory
// @example lib = load_lib("crypto.so", "/lib", "cryptoLib")            //Load a library with a specified type, return null on type mismatch
//  * @return {objectLib | null}
// @example lib = load_lib                                              //Load metaxploit.so from /lib directory
// @example lib = load_lib("metaxploit.so")                             //Load a library without specifying type
// @example lib = load_lib("customLib.so", "/altLib")                   //Load a library from specified directory
// @example lib = load_lib("crypto.so", "/lib", "cryptoLib")            //Load a library with a specified type, return null on type mismatch
load_lib = function(libName = "metaxploit.so", libDir = "/lib", libType ="")
    libLocation = libDir + "/" + libName
    if libName == "" then
        return get_shell.host_computer.File("/")
    end if
    yield; lib = include_lib(libLocation)
        if not typeof(lib) == null then
            if libType == "" then
                return lib
            else if typeof(lib) == libType then
                return lib
            end if
        else
            return null
        end if
end function



force_params = function(usage, numParams)
	if params.len < 1 then exit usage
	if params[0] == "-h" or params[0] == "--help" then exit usage
	if params.len < numParams then exit usage

force_params = function(usage, numParams)
	if params.len < 1 then exit usage
	if params[0] == "-h" or params[0] == "--help" then exit usage
	if params.len < numParams then exit usage
end function

BootStrap = {"load_lib":@load_lib , "check_params":@checkparams}
boot = new BootStrap
print typeof(boot.load_lib)
exit